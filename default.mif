DEPTH = 65536;
WIDTH = 16;

ADDRESS_RADIX = HEX;
DATA_RADIX = HEX;

CONTENT
	BEGIN
		0000:	1D00;	% call 0x0010 %
		0001:	0010;
		0002:	1E00;	% jmp 0x0002 %
		0003:	0002;
		0004:	0000;
		0005:	0000;
		0006:	0000;
		0007:	0000;
		0008:	0000;
		0009:	0000;
		000A:	0000;
		000B:	0000;
		000C:	0000;
		000D:	0000;
		000E:	0000;
		000F:	0000;
		
		0010:	1C00;	% xor r0 r0 %
		0011:	0000;
		0012:	1C01;	% xor r1 r1 %
		0013:	0001;
		0014:	0B00;	% addi r0 0x0FFF %
		0015:   0FFF;
		0016:   0101;	% mov r1 r0 %
		0017:   0000;
		0018:   1F00;	% ret %
		0019:   0000;
		
		0020:	1C00;	% xor r0 r0 %
		0021:	0000;
		0022:	1C01;	% xor r1 r1 %
		0023:	0001;
		0024:   0200;	% lod r0 0x0003 %
		0025:   0003;
		0026:   1F00;	% ret %
		0027:   0000;
		
		0030:	1C00;	% xor r0 r0 %
		0031:	0000;
		0032:	1C01;	% xor r1 r1 %
        0033:	0001;
		0034:	0B01;	% addi r1 0x070F %
		0035:   070F;
        0036:   0301;	% sto r1 0x0004 %
        0037:   0004;
        0038:	1F00;	% ret %
		0039:	0000;
		
		0040:	1C01;	% xor r1 r1 %
		0041:	0001;
		0042:	0B01;	% addi r1 0x0001 %
		0043:   0001;
		0044:	0401;	% push r1 %
		0045:	0000;
		0046:	0701;	% inc r1 %
		0047:	0000;
		0048:	0401;	% push r1 %
		0049:	0000;
		004A:	0500;	% pop r0 %
		004B:	0000;
		004C:	0501;	% pop r1 %
		004D:	0000;
		004E:   1F00;	% ret %
		004F:	0000;
		
		0050:	1C00;	% xor r0 r0 %
		0051:   0000;
		0052:   1C01;	% xor r1 r1 %
		0053:   0001;
		0054:   0B00;	% addi r0 0x0011 %
		0055:   0011;
		0056:   0B01;	% addi r1 0x0023 %
		0057:   0023;
		0058:	0600;	% cmp r0 r1 %
		0059:   0001;
		005A:   1F00;	% ret %
		005B:   0000;
		
		0060:	1C00;	% xor r0 r0 %
		0061:   0000;
		0062:   1C01;	% xor r1 r1 %
		0063:   0001;
		0064:   0700;	% inc r0 %
		0065:   0000;
		0066:   1F00;	% ret %
		0067:   0000;
		
		0070:	1C00;	% xor r0 r0 %
		0071:   0000;
		0072:   1C01;	% xor r1 r1 %
		0073:   0001;
		0074:   0800;	% dec r0 %
		0075:   0000;
		0076:   1F00;	% ret %
		0077:   0000;
		
		0080:	1C00;	% xor r0 r0 %
		0081:   0000;
		0082:   1C01;	% xor r1 r1 %
		0083:   0001;
		0084:   0B00;	% addi r0 0x0011 %
		0085:   0011;
		0086:   0900;	% neg r0 %
		0087:   0000;
		0088:   1F00;	% ret %
		0089:   0000;
		
		0090:	1C00;	% xor r0 r0 %
		0091:   0000;
		0092:   1C01;	% xor r1 r1 %
		0093:   0001;
		0094:   0B00;	% addi r0 0x0011 %
		0095:   0011;
		0096:   0B01;	% addi r1 0x0023 %
		0097:   0023;
		0098:	0A00;	% add r0 r1 %
		0099:   0001;
		009A:   1F00;	% ret %
		009B:   0000;
		
		00A0:	1C00;	% xor r0 r0 %
		00A1:   0000;
		00A2:   1C01;	% xor r1 r1 %
		00A3:   0001;
		00A4:   0B00;	% addi r0 0x0011 %
		00A5:   0011;
		00A6:   0B01;	% addi r1 0x0023 %
		00A7:   0023;
		00A8:	0C00;	% sub r0 r1 %
		00A9:   0001;
		00AA:   1F00;	% ret %
		00AB:   0000;
		
		00B0:	1C00;	% xor r0 r0 %
		00B1:   0000;
		00B2:   1C01;	% xor r1 r1 %
		00B3:   0001;
		00B4:   0B00;	% addi r0 0x0011 %
		00B5:   0011;
		00B6:   0D00;	% subi r0 0x0023 %
		00B7:   0023;
		00B8:	1F00;	% ret %
		00B9:   0000;
		
		00C0:	1C00;	% xor r0 r0 %
		00C1:   0000;
		00C2:   1C01;	% xor r1 r1 %
		00C3:   0001;
		00C4:   0B00;	% addi r0 0x1234 %
		00C5:   1234;
		00C6:   0B01;	% addi r1 0xFEFE %
		00C7:   FEFE;
		00C8:	0E00;	% mul r0 r1 %
		00C9:   0001;
		00CA:   1F00;	% ret %
		00CB:   0000;
		
		00D0:	1C00;	% xor r0 r0 %
		00D1:   0000;
		00D2:   1C01;	% xor r1 r1 %
		00D3:   0001;
		00D4:   0B00;	% addi r0 0x1234 %
		00D5:   1234;
		00D6:   0B01;	% addi r1 0xFEFE %
		00D7:   FEFE;
		00D8:	0F00;	% muli r0 r1 %
		00D9:   0001;
		00DA:   1F00;	% ret %
		00DB:   0000;
		
		00E0:	1C00;	% xor r0 r0 %
		00E1:   0000;
		00E2:   1C01;	% xor r1 r1 %
		00E3:   0001;
		00E4:   0B00;	% addi r0 0xFEFE %
		00E5:   FEFE;
		00E6:   0B01;	% addi r1 0x1234 %
		00E7:   1234;
		00E8:	1000;	% div r0 r1 %
		00E9:   0001;
		00EA:   1F00;	% ret %
		00EB:   0000;
		
		00F0:	1C00;	% xor r0 r0 %
		00F1:   0000;
		00F2:   1C01;	% xor r1 r1 %
		00F3:   0001;
		00F4:   0B00;	% addi r0 0xFEFE %
		00F5:   FEFE;
		00F6:   0B01;	% addi r1 0x1234 %
		00F7:   1234;
		00F8:	1100;	% divi r0 r1 %
		00F9:   0001;
		00FA:   1F00;	% ret %
		00FB:   0000;
		
		0100:	1C00;	% xor r0 r0 %
		0101:   0000;
		0102:   1C01;	% xor r1 r1 %
		0103:   0001;
		0104:   0B00;	% addi r0 0xFEFE %
		0105:   FEFE;
		0106:   1200;	% not r0 %
		0107:   0000;
		0108:	1F00;	% ret %
		0109:   0000;
		
		0110:	1C00;	% xor r0 r0 %
		0111:   0000;
		0112:   1C01;	% xor r1 r1 %
		0113:   0001;
		0114:   0B00;	% addi r0 0x1234 %
		0115:   1234;
		0116:   0B01;	% addi r1 0x0002 %
		0117:   0002;
		0118:	1300;	% shl r0 r1 %
		0119:   0001;
		011A:   1F00;	% ret %
		011B:   0000;
		
		0120:	1C00;	% xor r0 r0 %
		0121:   0000;
		0122:   1C01;	% xor r1 r1 %
		0123:   0001;
		0124:   0B00;	% addi r0 0x1234 %
		0125:   1234;
		0126:   1400;	% shli r0 0x0002 %
		0127:   0002;
		0128:	1F00;	% ret %
		0129:   0000;
		
		0130:	1C00;	% xor r0 r0 %
		0131:   0000;
		0132:   1C01;	% xor r1 r1 %
		0133:   0001;
		0134:   0B00;	% addi r0 0xF234 %
		0135:   F234;
		0136:   0B01;	% addi r1 0x0002 %
		0137:   0002;
		0138:	1500;	% shr r0 r1 %
		0139:   0001;
		013A:   1F00;	% ret %
		013B:   0000;
		
		0140:	1C00;	% xor r0 r0 %
		0141:   0000;
		0142:   1C01;	% xor r1 r1 %
		0143:   0001;
		0144:   0B00;	% addi r0 0xF234 %
		0145:   F234;
		0146:   1600;	% shri r0 0x0002 %
		0147:   0002;
		0148:	1F00;	% ret %
		0149:   0000;
		
		0150:	1C00;	% xor r0 r0 %
		0151:   0000;
		0152:   1C01;	% xor r1 r1 %
		0153:   0001;
		0154:   0B00;	% addi r0 0xF234 %
		0155:   F234;
		0156:   0B01;	% addi r1 0x0002 %
		0157:   0002;
		0158:	1700;	% sar r0 r1 %
		0159:   0001;
		015A:   1F00;	% ret %
		015B:   0000;
		
		0160:	1C00;	% xor r0 r0 %
		0161:   0000;
		0162:   1C01;	% xor r1 r1 %
		0163:   0001;
		0164:   0B00;	% addi r0 0xF234 %
		0165:   F234;
		0166:   1800;	% sari r0 0x0002 %
		0167:   0002;
		0168:	1F00;	% ret %
		0169:   0000;
		
		0170:	1C00;	% xor r0 r0 %
		0171:   0000;
		0172:   1C01;	% xor r1 r1 %
		0173:   0001;
		0174:   0B00;	% addi r0 0x0003 %
		0175:   0003;
		0176:   0B01;	% addi r1 0x0005 %
		0177:   0005;
		0178:	1900;	% and r0 r1 %
		0179:   0001;
		017A:   1F00;	% ret %
		017B:   0000;
		
		0180:	1C00;	% xor r0 r0 %
		0181:   0000;
		0182:   1C01;	% xor r1 r1 %
		0183:   0001;
		0184:   0B00;	% addi r0 0x0001 %
		0185:   0001;
		0186:   0B01;	% addi r1 0x0000 %
		0187:   0000;
		0188:	1A00;	% test r0 r1 %
		0189:   0001;
		018A:   1F00;	% ret %
		018B:   0000;
		
		0190:	1C00;	% xor r0 r0 %
		0191:   0000;
		0192:   1C01;	% xor r1 r1 %
		0193:   0001;
		0194:   0B00;	% addi r0 0x0003 %
		0195:   0003;
		0196:   0B01;	% addi r1 0x0005 %
		0197:   0005;
		0198:	1B00;	% or r0 r1 %
		0199:   0001;
		019A:   1F00;	% ret %
		019B:   0000;
		
		01A0:	1C00;	% xor r0 r0 %
		01A1:   0000;
		01A2:   1C01;	% xor r1 r1 %
		01A3:   0001;
		01A4:   0B00;	% addi r0 0x0003 %
		01A5:   0003;
		01A6:   0B01;	% addi r1 0x0005 %
		01A7:   0005;
		01A8:	1C00;	% xor r0 r1 %
		01A9:   0001;
		01AA:   1F00;	% ret %
		01AB:   0000;
	END